import { ethers } from 'ethers';

export const FANTASY_FOOTBALL_ADDRESS = '0xa84ccf2422afccadfc0d88430b4f6fe590063f89';

export const FANTASY_FOOTBALL_ABI = [
  // ... (previous ABI remains the same)
];

export async function getMatches(provider) {
  const contract = new ethers.Contract(FANTASY_FOOTBALL_ADDRESS, FANTASY_FOOTBALL_ABI, provider);
  try {
    const matchCount = await contract.matchCounter();
    const matches = [];
    for (let i = 1; i <= matchCount; i++) {
      const match = await contract.getMatchDetails(i);
      matches.push({
        id: i,
        startTime: Number(match[1]),
        endTime: Number(match[2]),
        isFinished: match[3],
        participants: match[4]
      });
    }
    return matches;
  } catch (error) {
    console.error("Error fetching matches:", error);
    return [];
  }
}

export async function createTeam(signer, matchId, playerIds) {
  const contract = new ethers.Contract(FANTASY_FOOTBALL_ADDRESS, FANTASY_FOOTBALL_ABI, signer);
  try {
    const entryFee = await contract.ENTRY_FEE();
    const tx = await contract.registerTeam(matchId, playerIds, { value: entryFee });
    await tx.wait();
    return true;
  } catch (error) {
    console.error("Error creating team:", error);
    return false;
  }
}

export async function getTeam(provider, userAddress, matchId) {
  const contract = new ethers.Contract(FANTASY_FOOTBALL_ADDRESS, FANTASY_FOOTBALL_ABI, provider);
  try {
    const team = await contract.getTeam(userAddress);
    return team;
  } catch (error) {
    console.error("Error fetching team:", error);
    return null;
  }
}